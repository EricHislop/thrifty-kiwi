<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Thrifty Kiwi</title><link>http://thriftykiwi.com/categories/tutorials/</link><description>Recent content in Tutorials on Thrifty Kiwi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Mar 2023 22:14:39 +1300</lastBuildDate><atom:link href="http://thriftykiwi.com/categories/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Aws Amplify React</title><link>http://thriftykiwi.com/p/aws-amplify-react/</link><pubDate>Thu, 23 Mar 2023 22:14:39 +1300</pubDate><guid>http://thriftykiwi.com/p/aws-amplify-react/</guid><description>&lt;img src="http://thriftykiwi.com/p/aws-amplify-react/cover.png" alt="Featured image of post Aws Amplify React" />&lt;h1 id="how-to-build-a-subscription-sharing-app-with-react-aws-amplify-and-graphql">How to Build a Subscription Sharing App with React, AWS Amplify, and GraphQL&lt;/h1>
&lt;p>In this tutorial, we&amp;rsquo;ll build a web application for tracking and sharing subscription services like Netflix, Spotify, and YouTube. We&amp;rsquo;ll use React for the frontend, AWS Amplify for the backend, and GraphQL for our API.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Basic knowledge of JavaScript and React&lt;/li>
&lt;li>An AWS account&lt;/li>
&lt;li>Node.js and npm installed on your machine&lt;/li>
&lt;/ul>
&lt;h2 id="step-1-set-up-your-react-app">Step 1: Set Up Your React App&lt;/h2>
&lt;p>Create a new React app using
&lt;code>npx create-react-app kiwishare&lt;/code>
Change to the project directory:&lt;/p>
&lt;p>&lt;code>cd kiwishare&lt;/code>&lt;/p>
&lt;p>Install the necessary dependencies:&lt;/p>
&lt;p>&lt;code>npm install aws-amplify @aws-amplify/ui-react&lt;/code>&lt;/p>
&lt;h2 id="step-2-install-and-configure-the-amplify-cli">Step 2: Install and Configure the Amplify CLI&lt;/h2>
&lt;p>Install the Amplify CLI globally:&lt;/p>
&lt;p>&lt;code>npm install -g @aws-amplify/cli&lt;/code>&lt;/p>
&lt;p>Configure the Amplify CLI with your AWS account:&lt;/p>
&lt;p>&lt;code>amplify configure&lt;/code>&lt;/p>
&lt;p>Follow the prompts to complete the configuration process.&lt;/p>
&lt;h2 id="step-3-initialize-amplify">Step 3: Initialize Amplify&lt;/h2>
&lt;p>&lt;code>amplify init&lt;/code>&lt;/p>
&lt;p>Follow the prompts to complete the Amplify initialization process.&lt;/p>
&lt;h2 id="step-4-add-auth-and-api">Step 4: Add Auth and API&lt;/h2>
&lt;p>Add authentication to your app:&lt;/p>
&lt;p>&lt;code>amplify add auth&lt;/code>&lt;/p>
&lt;p>Add a GraphQL API:&lt;/p>
&lt;p>&lt;code>amplify add api&lt;/code>&lt;/p>
&lt;p>Choose the &amp;ldquo;Amazon DynamoDB&amp;rdquo; as the data source.&lt;/p>
&lt;h2 id="step-5-define-your-graphql-schema">Step 5: Define Your GraphQL Schema&lt;/h2>
&lt;p>Edit the &lt;code>schema.graphql&lt;/code> file to define the data model for your app:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">StreamingService&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@model&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@auth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">allow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">owner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}])&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">price&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">Float&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">sharings&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nc">Sharing&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nd">@hasMany&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">indexName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;byStreamingService&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">fields&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nc">type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">Sharing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@model&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@auth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">allow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">owner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}])&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">streamingServiceID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nd">@index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;byStreamingService&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">streamingService&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">StreamingService&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nd">@belongsTo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">fields&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;streamingServiceID&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="step-6-deploy-your-backend">Step 6: Deploy Your Backend&lt;/h2>
&lt;p>&lt;code>amplify push&lt;/code>&lt;/p>
&lt;p>This command will create and configure the necessary backend resources in your AWS account.&lt;/p>
&lt;h2 id="step-7-update-your-react-app">Step 7: Update Your React App&lt;/h2>
&lt;p>Integrate Amplify into your React app by adding the necessary imports and configurations.&lt;/p>
&lt;h2 id="step-8-run-your-app">Step 8: Run Your App&lt;/h2>
&lt;p>&lt;code>npm start&lt;/code>&lt;/p>
&lt;p>Your app should now be running on &lt;a class="link" href="http://localhost:3000" target="_blank" rel="noopener"
>http://localhost:3000&lt;/a>. You can now sign up, sign in, and start using the app to track and share subscription services!&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>In this tutorial, we built a subscription sharing app using React, AWS Amplify, and GraphQL. We learned how to set up a React app, configure Amplify, define a GraphQL schema, and deploy our backend to AWS. This is just the beginning – you can now customize and expand your app to add more features and functionality!&lt;/p>
&lt;p>Happy coding! 🚀&lt;/p></description></item><item><title>Setting Up a Hugo Stacks Blog</title><link>http://thriftykiwi.com/p/setting-up-a-hugo-stacks-blog/</link><pubDate>Mon, 20 Mar 2023 23:37:10 +1300</pubDate><guid>http://thriftykiwi.com/p/setting-up-a-hugo-stacks-blog/</guid><description>&lt;img src="http://thriftykiwi.com/p/setting-up-a-hugo-stacks-blog/programmers_desk_with_lots_of_computer_screens.png" alt="Featured image of post Setting Up a Hugo Stacks Blog" />&lt;h1 id="setting-up-hugo-theme-stack">Setting Up Hugo Theme Stack&lt;/h1>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a> is a fast and flexible static site generator that allows you to build websites quickly and easily. One of the many benefits of using Hugo is the variety of themes available. In this tutorial, we will cover the setup process for the &lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>Stack&lt;/a> theme, which is a modern and elegant theme that is perfect for building portfolios, personal websites, and blogs.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before getting started, you will need to have the following software installed on your computer:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://git-scm.com/" target="_blank" rel="noopener"
>Git&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://golang.org/" target="_blank" rel="noopener"
>Go&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>To get started, you&amp;rsquo;ll need to create a new repository on GitHub and use the Stack theme starter template. To do this, follow these steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click the &amp;ldquo;Use this template&amp;rdquo; button on the &lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack-starter" target="_blank" rel="noopener"
>Stack theme starter template&lt;/a> repository.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name your repository and click &amp;ldquo;Create repository from template&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clone the repository to your local machine using Git.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run &lt;code>hugo server&lt;/code> to start the local development server and see the default Stack theme in action.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="setting-up-favicon">Setting Up Favicon&lt;/h2>
&lt;p>To set up a custom favicon for your Hugo site, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Create an SVG file with the desired icon. For example:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;svg xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;text y=&amp;#34;26&amp;#34; font-size=&amp;#34;26&amp;#34;&amp;gt;🥝&amp;lt;/text&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/svg&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>On Windows you can press the Windows key and . to bring up emojis to use as a favicon.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Save the SVG file as &lt;code>favicon.svg&lt;/code> in the &lt;code>static&lt;/code> directory of your Hugo project.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add the following link tag to the &lt;code>layouts/partials/head/custom.html&lt;/code> file:&lt;/p>
&lt;p>&lt;code>&amp;lt;link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/svg+xml&amp;quot; href=&amp;quot;/favicon.svg&amp;quot;&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run &lt;code>hugo server&lt;/code> to view the site with the custom favicon.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="hosting-on-github-pages">Hosting on GitHub Pages&lt;/h2>
&lt;p>To host your Hugo site on GitHub Pages, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Push your changes to the repository on GitHub.&lt;/li>
&lt;li>In the repository settings, navigate to the &amp;ldquo;Pages&amp;rdquo; section.&lt;/li>
&lt;li>Under &amp;ldquo;Source&amp;rdquo;, select the branch you want to deploy (usually main) and click &amp;ldquo;Save&amp;rdquo;.&lt;/li>
&lt;li>Wait a few minutes for GitHub Pages to build and deploy your site.&lt;/li>
&lt;li>Visit &lt;code>https://&amp;lt;your-username&amp;gt;.github.io/&amp;lt;your-repository-name&amp;gt;/&lt;/code> in your browser to see your site live on GitHub Pages.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>In this tutorial, we covered the setup process for the Stack theme in Hugo. We also showed you how to set up a custom favicon and host your Hugo site on GitHub Pages. With this knowledge, you should be able to build a beautiful and functional website using Hugo and the Stack theme. Happy building!&lt;/p></description></item></channel></rss>